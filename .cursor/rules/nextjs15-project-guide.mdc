---
description:
globs:
alwaysApply: false
---
# Next.js 15 Boilerplate 프로젝트 가이드

## 프로젝트 개요
이 프로젝트는 Next.js 15 App Router를 기반으로 한 현대적인 웹 애플리케이션 보일러플레이트입니다.

## 핵심 기술 스택
- **Next.js 15.3.2** - App Router, React 19
- **TypeScript** - 엄격한 타입 체킹 활성화
- **Tailwind CSS v4** - 최신 CSS 프레임워크
- **Auth.js** - 인증 시스템
- **Prisma** - ORM 및 데이터베이스 관리
- **next-intl** - 국제화 지원
- **shadcn/ui** - UI 컴포넌트 라이브러리

## 주요 설정 파일

### 빌드 및 개발 설정
- [next.config.ts](mdc:next.config.ts) - Turbopack 최적화, 이미지 최적화, 보안 설정
- [tsconfig.json](mdc:tsconfig.json) - TypeScript 설정, 엄격한 타입 체킹
- [eslint.config.mjs](mdc:eslint.config.mjs) - Next.js 15 특화 린팅 규칙
- [postcss.config.mjs](mdc:postcss.config.mjs) - CSS 최적화 및 Tailwind 설정
- [.prettierrc](mdc:.prettierrc) - 코드 포맷팅 표준

### 보안 및 성능
- [src/app/middleware.ts](mdc:src/app/middleware.ts) - CSP 헤더, 보안 설정
- [src/app/providers.tsx](mdc:src/app/providers.tsx) - Web Vitals 모니터링
- [src/app/layout.tsx](mdc:src/app/layout.tsx) - 메타데이터, SEO 최적화

### SEO 및 크롤링
- [src/app/robots.ts](mdc:src/app/robots.ts) - 검색 엔진 크롤러 제어
- [src/app/sitemap.ts](mdc:src/app/sitemap.ts) - 다국어 사이트맵 생성

## 중요한 최적화 사항
전체 최적화 내용은 [NEXTJS15_OPTIMIZATIONS.md](mdc:NEXTJS15_OPTIMIZATIONS.md)를 참조하세요.

## 개발 워크플로우
```bash
# 개발 서버 시작 (Turbopack 사용)
npm run dev

# 타입 체킹
npm run type-check

# 린팅 및 자동 수정
npm run lint:fix

# 코드 포맷팅
npm run format

# 빌드 전 전체 검증
npm run prebuild
```

## API Routes 패턴
API Routes는 App Router 패턴을 따르며, [src/app/api/url-meta/route.ts](mdc:src/app/api/url-meta/route.ts)를 참조하여 다음 사항을 준수하세요:
- `connection()` API 사용으로 동적 렌더링 명시
- 적절한 `dynamic` 설정
- 구체적인 에러 핸들링 및 상태 코드
- 타임아웃 및 검증 로직

## 코딩 표준
- TypeScript 엄격 모드 사용
- ESLint 규칙 준수
- Prettier 포맷팅 적용
- 접근성(a11y) 규칙 준수
- Web Vitals 성능 최적화 고려
